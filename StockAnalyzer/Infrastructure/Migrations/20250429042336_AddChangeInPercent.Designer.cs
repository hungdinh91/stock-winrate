// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockAnalyzer.Infrastructure;

#nullable disable

namespace StockAnalyzer.Infrastructure.Migrations
{
    [DbContext(typeof(StockDbContext))]
    [Migration("20250429042336_AddChangeInPercent")]
    partial class AddChangeInPercent
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StockAnalyzer.Domain.Entities.PriceChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChangeInPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("FromDate")
                        .HasColumnType("date");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("ToDate")
                        .HasColumnType("date");

                    b.Property<decimal>("TotalChangePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PriceChanges");
                });

            modelBuilder.Entity("StockAnalyzer.Domain.Entities.StockPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ClosePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("HighPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LowPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpenPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("Rsi14")
                        .HasColumnType("float");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("Volume")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Symbol", "Date");

                    b.ToTable("StockPrices");
                });

            modelBuilder.Entity("StockAnalyzer.Domain.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<long>("Volume")
                        .HasColumnType("bigint");

                    b.Property<int>("WinRateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Date");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("StockAnalyzer.Domain.Entities.WinRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BalanceAfter10Year")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceAfter1Year")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceAfter2Year")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceAfter3Year")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceAfter4Year")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceAfter5Year")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceAfter6Year")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceAfter7Year")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceAfter8Year")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceAfter9Year")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceZero")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BuyAtRsi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ContinueBuyAtRsi1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ContinueBuyAtRsi2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ContinueSellAtRsi1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ContinueSellAtRsi2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CutLossRateInPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SellAtRsi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WinRateAfter10Year")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WinRateAfter1Year")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WinRateAfter2Year")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WinRateAfter3Year")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WinRateAfter4Year")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WinRateAfter5Year")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WinRateAfter6Year")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WinRateAfter7Year")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WinRateAfter8Year")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WinRateAfter9Year")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("WinRates");
                });
#pragma warning restore 612, 618
        }
    }
}
